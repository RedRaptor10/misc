# Use yt-dlp --config-location yt-dlp.conf
# Documentation: https://github.com/yt-dlp/yt-dlp
# Single-line command: yt-dlp -f bestvideo*+bestaudio/best --download-archive archive.log --add-metadata --write-description --write-info-json --write-thumbnail --embed-thumbnail --convert-thumbnail png --embed-chapters --all-subs --embed-subs --write-comments --merge-output-format mkv -o "%(playlist_uploader)s\%(playlist)s\%(playlist_index)s - %(title)s [%(id)s].%(ext)s"

# Video format code, see "FORMAT SELECTION" for more details (Default: bestvideo*+bestaudio/best)
-f bestvideo*+bestaudio/best

# Download only videos not listed in the archive file. Record the IDs of all downloaded videos in it
--download-archive archive.log

# Embed metadata to the video file. Also embeds chapters/infojson if present unless --no-embed-chapters/--no-embed-info-json are used (Alias: --add-metadata)
--embed-metadata

# Write video description to a .description file
--write-description

# Write video metadata to a .info.json file (this may contain personal information)
--write-info-json

# Write thumbnail image to disk
--write-thumbnail

# Embed thumbnail in the video as cover art
--embed-thumbnail

# Convert the thumbnails to another format (currently supported: jpg, png, webp). You can specify multiple rules using similar syntax as --remux-video
--convert-thumbnail png

# Add chapter markers to the video file
--embed-chapters

# Download all language subtitles (--sub-langs all) and write subtitle files (--write-subs)
--all-subs

# Embed subtitles in the video (only for mp4, webm and mkv videos)
--embed-subs

# Retrieve video comments to be placed in the infojson. The comments are fetched even without this option if the extraction is known to be quick
--write-comments

# Containers that may be used when merging formats, separated by "/", e.g. "mp4/mkv". Ignored if no merge is required. (currently supported: avi, flv, mkv, mov, mp4, webm)
--merge-output-format mkv

# Output filename template; see "OUTPUT TEMPLATE" for details
-o "%(playlist_uploader)s\Playlists\%(playlist)s\%(playlist_index)s - %(title)s [%(id)s].%(ext)s"